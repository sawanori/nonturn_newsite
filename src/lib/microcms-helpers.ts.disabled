import { BlogPost, BlogCategory, BlogTag, BlogAuthor } from './microcms'

// Helper functions to ensure compatibility between microCMS data and our components

export function normalizeBlogPost(post: BlogPost): BlogPost {
  return {
    ...post,
    slug: post.slug || post.id,
    excerpt: post.excerpt || extractExcerpt(post.content),
    category: post.category ? normalizeCategory(post.category) : getDefaultCategory(),
    tags: post.tags ? post.tags.map(normalizeTag) : [],
    author: post.author ? normalizeAuthor(post.author) : getDefaultAuthor(),
    featured: post.featured || false
  }
}

export function normalizeCategory(category: BlogCategory): BlogCategory {
  return {
    ...category,
    slug: category.slug || category.id,
    color: category.color || '#3B82F6',
    description: category.description || category.name
  }
}

export function normalizeTag(tag: BlogTag): BlogTag {
  return {
    ...tag,
    slug: tag.slug || tag.id,
    color: tag.color || '#10B981'
  }
}

export function normalizeAuthor(author: BlogAuthor): BlogAuthor {
  return {
    ...author,
    bio: author.bio || '映像制作のプロフェッショナル',
    avatar: author.avatar || {
      url: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=200&h=200&fit=crop&crop=face',
      height: 200,
      width: 200
    }
  }
}

export function getDefaultCategory(): BlogCategory {
  return {
    id: 'default',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    publishedAt: new Date().toISOString(),
    revisedAt: new Date().toISOString(),
    name: '一般',
    slug: 'general',
    color: '#6B7280',
    description: '一般的な記事'
  }
}

export function getDefaultAuthor(): BlogAuthor {
  return {
    id: 'default',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    publishedAt: new Date().toISOString(),
    revisedAt: new Date().toISOString(),
    name: 'NonTurn編集部',
    bio: '映像制作のプロフェッショナル集団',
    avatar: {
      url: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=200&h=200&fit=crop&crop=face',
      height: 200,
      width: 200
    }
  }
}

export function extractExcerpt(content: string, maxLength: number = 160): string {
  // Remove HTML tags
  const textContent = content.replace(/<[^>]*>/g, '')
  
  if (textContent.length <= maxLength) {
    return textContent
  }
  
  return textContent.slice(0, maxLength).trim() + '...'
}

export function generateSlugFromTitle(title: string): string {
  return title
    .toLowerCase()
    .replace(/[^\w\s-]/g, '') // Remove special characters
    .replace(/\s+/g, '-')     // Replace spaces with hyphens
    .trim()
}